subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    jacoco {
        toolVersion = '0.8.2'
    }

    ext {
        jacocoDestinationFile = file("$buildDir/jacoco/test.exec")
    }

    test {
        useJUnitPlatform()
        jacoco {
            destinationFile = file(jacocoDestinationFile)
        }
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTest result: ${result.resultType}"
                println "Test summary: ${result.testCount} tests, " +
                        "${result.successfulTestCount} succeeded, " +
                        "${result.failedTestCount} failed, " +
                        "${result.skippedTestCount} skipped"
            }
        }
    }
}

project(':iam-model') {
}

project(':iam-client') {
    dependencies {
        implementation project(':iam-model')
    }
}

project(':iam-client-spring') {
    dependencies {
        implementation project(':iam-model')
        implementation project(':iam-client')
    }
}

project(':iam-service-client') {
    dependencies {
        implementation project(':iam-model')
        implementation project(':iam-core')
    }
}

project(':iam-core') {
    dependencies {
        implementation project(':iam-model')
    }
}

project(':iam-service') {
    dependencies {
        implementation project(':iam-core')
        implementation project(':iam-model')
        implementation project(':iam-client')
        implementation project(':iam-client-spring')
        implementation project(':iam-persistence-file-system')
        implementation project(':iam-persistence-mongo')
        testImplementation project(':iam-service-client')
    }
}

project(':iam-persistence-file-system') {
    dependencies {
        implementation project(':iam-model')
        implementation project(':iam-core')
    }
}

project(':iam-persistence-mongo') {
    dependencies {
        implementation project(':iam-model')
        implementation project(':iam-core')
    }
}

project(':spring-resource-server') {
    dependencies {
        testImplementation project(':iam-model')
        testImplementation project(':iam-service-client')
    }
}

project(':spring-method-security') {
    dependencies {
        implementation project(':iam-model')
        implementation project(':iam-client')
        implementation project(':iam-client-spring')
        testImplementation project(':iam-core')
        testImplementation project(':iam-service-client')
    }
}


